// <auto-generated />
using System;
using HypeHubDAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HypeHubDAL.Migrations
{
    [DbContext(typeof(HypeHubContext))]
    partial class HypeHubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountItem", b =>
                {
                    b.Property<Guid>("LikedItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LikesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LikedItemsId", "LikesId");

                    b.HasIndex("LikesId");

                    b.ToTable("AccountItem");
                });

            modelBuilder.Entity("AccountOutfit", b =>
                {
                    b.Property<Guid>("LikedOutfitsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LikesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LikedOutfitsId", "LikesId");

                    b.HasIndex("LikesId");

                    b.ToTable("AccountOutfit");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccountTypes")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HypeHubDAL.Models.AccountCredentials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("AccountCredentials");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CloathingType")
                        .HasColumnType("int");

                    b.Property<string>("Colorway")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WardrobeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WardrobeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("HypeHubDAL.Models.ItemImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemsImages");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Outfits");
                });

            modelBuilder.Entity("HypeHubDAL.Models.OutfitImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OutfitId");

                    b.ToTable("OutfitImages");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Wardrobe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Wardrobes");
                });

            modelBuilder.Entity("ItemOutfit", b =>
                {
                    b.Property<Guid>("ItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemsId", "OutfitsId");

                    b.HasIndex("OutfitsId");

                    b.ToTable("ItemOutfit");
                });

            modelBuilder.Entity("AccountItem", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("LikedItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HypeHubDAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("LikesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountOutfit", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Outfit", null)
                        .WithMany()
                        .HasForeignKey("LikedOutfitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HypeHubDAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("LikesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HypeHubDAL.Models.AccountCredentials", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithOne("Credentials")
                        .HasForeignKey("HypeHubDAL.Models.AccountCredentials", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Wardrobe", "Wardrobe")
                        .WithMany("Items")
                        .HasForeignKey("WardrobeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wardrobe");
                });

            modelBuilder.Entity("HypeHubDAL.Models.ItemImage", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", "Item")
                        .WithMany("Images")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithMany("Outfits")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.OutfitImage", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Outfit", "Outfit")
                        .WithMany("Images")
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Wardrobe", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithOne("Wardrobe")
                        .HasForeignKey("HypeHubDAL.Models.Wardrobe", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ItemOutfit", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HypeHubDAL.Models.Outfit", null)
                        .WithMany()
                        .HasForeignKey("OutfitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HypeHubDAL.Models.Account", b =>
                {
                    b.Navigation("Credentials")
                        .IsRequired();

                    b.Navigation("Outfits");

                    b.Navigation("Wardrobe")
                        .IsRequired();
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Wardrobe", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
