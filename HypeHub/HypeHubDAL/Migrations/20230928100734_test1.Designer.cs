// <auto-generated />
using System;
using HypeHubDAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HypeHubDAL.Migrations
{
    [DbContext(typeof(HypeHubContext))]
    [Migration("20230928100734_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HypeHubDAL.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("IsPrivate")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44dec59d-3839-4b89-88a2-1527775d450d"),
                            AccountTypes = "User",
                            AvatarUrl = "https://example.com/avatar/user1.png",
                            IsPrivate = 0,
                            Username = "User1"
                        },
                        new
                        {
                            Id = new Guid("733aefec-d039-4fa3-9af6-db6a57819622"),
                            AccountTypes = "User",
                            IsPrivate = 1,
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.AccountCredentials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("AccountCredentials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de93be8b-2ac5-4dd6-8ce1-e808a05429cc"),
                            AccountId = new Guid("44dec59d-3839-4b89-88a2-1527775d450d"),
                            Email = "User1@gmail.com",
                            Password = "hasłoMasło521"
                        },
                        new
                        {
                            Id = new Guid("f82c1929-02ec-449e-b0d0-6667e6979139"),
                            AccountId = new Guid("733aefec-d039-4fa3-9af6-db6a57819622"),
                            Email = "User2@gmail.com",
                            Password = "hasłoMasło520"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CloathingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colorway")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Model")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49ea5e99-81db-48ad-b5a7-4865788fffbb"),
                            AccountId = new Guid("44dec59d-3839-4b89-88a2-1527775d450d"),
                            Brand = "Brand1",
                            CloathingType = "Torso",
                            Colorway = "Colorway1",
                            Model = "Model1",
                            Name = "Item1",
                            Price = 10m,
                            PurchaseDate = new DateTime(2023, 8, 28, 10, 7, 34, 352, DateTimeKind.Utc).AddTicks(9568)
                        },
                        new
                        {
                            Id = new Guid("7a925b34-9613-47aa-a108-db9cd4dd5384"),
                            AccountId = new Guid("733aefec-d039-4fa3-9af6-db6a57819622"),
                            Brand = "Brand1",
                            CloathingType = "Torso",
                            Colorway = "Colorway1",
                            Model = "Model1",
                            Name = "Item1",
                            Price = 10m,
                            PurchaseDate = new DateTime(2023, 8, 28, 10, 7, 34, 352, DateTimeKind.Utc).AddTicks(9603)
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.ItemImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemsImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a466515-d1b7-4360-af69-56ae03a5384d"),
                            ItemId = new Guid("49ea5e99-81db-48ad-b5a7-4865788fffbb"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("73632c2e-9c35-45c3-998b-73a089ba195f"),
                            ItemId = new Guid("7a925b34-9613-47aa-a108-db9cd4dd5384"),
                            Url = "exampleURL"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Outfits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d90447a1-23df-4da0-ac01-dba9687ab872"),
                            AccountId = new Guid("44dec59d-3839-4b89-88a2-1527775d450d"),
                            CreationDate = new DateTime(2023, 9, 28, 12, 7, 34, 352, DateTimeKind.Local).AddTicks(9412),
                            Name = "Outfit224"
                        },
                        new
                        {
                            Id = new Guid("3c0af110-3845-4d78-a9fb-97d0bcfaa44b"),
                            AccountId = new Guid("44dec59d-3839-4b89-88a2-1527775d450d"),
                            CreationDate = new DateTime(2023, 9, 28, 12, 7, 34, 352, DateTimeKind.Local).AddTicks(9471),
                            Name = "Outfit642"
                        },
                        new
                        {
                            Id = new Guid("f6713d77-8f71-4aa8-af65-9b05387a0aab"),
                            AccountId = new Guid("733aefec-d039-4fa3-9af6-db6a57819622"),
                            CreationDate = new DateTime(2023, 9, 28, 12, 7, 34, 352, DateTimeKind.Local).AddTicks(9475),
                            Name = "Outfit899"
                        },
                        new
                        {
                            Id = new Guid("d809216b-f731-4382-9e3a-e6970417e607"),
                            AccountId = new Guid("733aefec-d039-4fa3-9af6-db6a57819622"),
                            CreationDate = new DateTime(2023, 9, 28, 12, 7, 34, 352, DateTimeKind.Local).AddTicks(9479),
                            Name = "Outfit450"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.OutfitImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OutfitId");

                    b.ToTable("OutfitImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ee7ee2f-0a0c-4ab3-92ed-bdd1c5dc3e56"),
                            OutfitId = new Guid("d90447a1-23df-4da0-ac01-dba9687ab872"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("2ee0f829-7717-4f51-bfd3-e83212422e5d"),
                            OutfitId = new Guid("3c0af110-3845-4d78-a9fb-97d0bcfaa44b"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("d9d510f5-f42e-4899-b9f7-297a0135c6fa"),
                            OutfitId = new Guid("f6713d77-8f71-4aa8-af65-9b05387a0aab"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("ac764d02-5879-4850-adfa-35b5b2789c31"),
                            OutfitId = new Guid("d809216b-f731-4382-9e3a-e6970417e607"),
                            Url = "exampleURL"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountItemLike", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("AccountItemLikes");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountOutfitLike", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OutfitId");

                    b.ToTable("AccountOutfitLikes");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.OutfitItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId", "OutfitId");

                    b.HasIndex("OutfitId");

                    b.ToTable("OutfitItems");
                });

            modelBuilder.Entity("HypeHubDAL.Models.AccountCredentials", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithOne("Credentials")
                        .HasForeignKey("HypeHubDAL.Models.AccountCredentials", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithMany("Items")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.ItemImage", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", "Item")
                        .WithMany("Images")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithMany("Outfits")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.OutfitImage", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Outfit", "Outfit")
                        .WithMany("Images")
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountItemLike", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", "Item")
                        .WithMany("Likes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountOutfitLike", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Outfit", "Outfit")
                        .WithMany("Likes")
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.OutfitItem", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HypeHubDAL.Models.Outfit", null)
                        .WithMany()
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HypeHubDAL.Models.Account", b =>
                {
                    b.Navigation("Credentials")
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
