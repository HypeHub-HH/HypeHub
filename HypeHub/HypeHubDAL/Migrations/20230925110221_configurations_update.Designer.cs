// <auto-generated />
using System;
using HypeHubDAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HypeHubDAL.Migrations
{
    [DbContext(typeof(HypeHubContext))]
    [Migration("20230925110221_configurations_update")]
    partial class configurations_update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HypeHubDAL.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("IsPrivate")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b38299b3-80e4-4433-aa4e-6d84075ebda8"),
                            AccountTypes = "User",
                            AvatarUrl = "https://example.com/avatar/user1.png",
                            IsPrivate = 0,
                            Username = "User1"
                        },
                        new
                        {
                            Id = new Guid("8a1ca283-5f79-4cf2-9301-f1ba2ecf1d1b"),
                            AccountTypes = "User",
                            IsPrivate = 1,
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.AccountCredentials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("AccountCredentials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("881d1538-413a-446b-9b55-e8e1747797d3"),
                            AccountId = new Guid("b38299b3-80e4-4433-aa4e-6d84075ebda8"),
                            Email = "User1@gmail.com",
                            Password = "hasłoMasło965"
                        },
                        new
                        {
                            Id = new Guid("1a100b2d-683a-4a5d-8f40-cb786640177e"),
                            AccountId = new Guid("8a1ca283-5f79-4cf2-9301-f1ba2ecf1d1b"),
                            Email = "User2@gmail.com",
                            Password = "hasłoMasło142"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CloathingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colorway")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Model")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bad749f5-4192-477a-b312-e05c9a82c54d"),
                            AccountId = new Guid("b38299b3-80e4-4433-aa4e-6d84075ebda8"),
                            Brand = "Brand1",
                            CloathingType = "Head",
                            Colorway = "Colorway1",
                            Model = "Model1",
                            Name = "Item1",
                            Price = 10m,
                            PurchaseDate = new DateTime(2023, 8, 25, 11, 2, 21, 74, DateTimeKind.Utc).AddTicks(520)
                        },
                        new
                        {
                            Id = new Guid("4e71fd23-407a-44ae-91a2-4c328a16ba4e"),
                            AccountId = new Guid("8a1ca283-5f79-4cf2-9301-f1ba2ecf1d1b"),
                            Brand = "Brand1",
                            CloathingType = "Head",
                            Colorway = "Colorway1",
                            Model = "Model1",
                            Name = "Item1",
                            Price = 10m,
                            PurchaseDate = new DateTime(2023, 8, 25, 11, 2, 21, 74, DateTimeKind.Utc).AddTicks(550)
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.ItemImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemsImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7b0a696-8098-4ac7-95b4-77156d3a9181"),
                            ItemId = new Guid("bad749f5-4192-477a-b312-e05c9a82c54d"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("9cb5f4bd-0848-40b6-9929-2bdcfebecef8"),
                            ItemId = new Guid("4e71fd23-407a-44ae-91a2-4c328a16ba4e"),
                            Url = "exampleURL"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Outfits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd649a4e-f751-42ba-b7fd-c033ff7bdd59"),
                            AccountId = new Guid("b38299b3-80e4-4433-aa4e-6d84075ebda8"),
                            CreationDate = new DateTime(2023, 9, 25, 13, 2, 21, 74, DateTimeKind.Local).AddTicks(364),
                            Name = "Outfit454"
                        },
                        new
                        {
                            Id = new Guid("e891bd20-713c-4014-b65c-e13575412a2d"),
                            AccountId = new Guid("b38299b3-80e4-4433-aa4e-6d84075ebda8"),
                            CreationDate = new DateTime(2023, 9, 25, 13, 2, 21, 74, DateTimeKind.Local).AddTicks(425),
                            Name = "Outfit883"
                        },
                        new
                        {
                            Id = new Guid("4e770bfc-ed96-457a-9549-1e3d86400e73"),
                            AccountId = new Guid("8a1ca283-5f79-4cf2-9301-f1ba2ecf1d1b"),
                            CreationDate = new DateTime(2023, 9, 25, 13, 2, 21, 74, DateTimeKind.Local).AddTicks(430),
                            Name = "Outfit208"
                        },
                        new
                        {
                            Id = new Guid("ede8d858-168c-47ba-935f-8d943ad67481"),
                            AccountId = new Guid("8a1ca283-5f79-4cf2-9301-f1ba2ecf1d1b"),
                            CreationDate = new DateTime(2023, 9, 25, 13, 2, 21, 74, DateTimeKind.Local).AddTicks(436),
                            Name = "Outfit836"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.OutfitImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OutfitId");

                    b.ToTable("OutfitImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3e08ea6-765b-4f29-a4ae-bf700535c978"),
                            OutfitId = new Guid("fd649a4e-f751-42ba-b7fd-c033ff7bdd59"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("7d8c4d82-6ee7-4905-af5c-8e24273d6873"),
                            OutfitId = new Guid("e891bd20-713c-4014-b65c-e13575412a2d"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("a08a00c4-d1c3-4b21-b45d-5aa5248213f5"),
                            OutfitId = new Guid("4e770bfc-ed96-457a-9549-1e3d86400e73"),
                            Url = "exampleURL"
                        },
                        new
                        {
                            Id = new Guid("741d3886-760a-44c3-b49a-42ac5cd7db35"),
                            OutfitId = new Guid("ede8d858-168c-47ba-935f-8d943ad67481"),
                            Url = "exampleURL"
                        });
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountItemLike", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("AccountItemLikes");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountOutfitLike", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OutfitId");

                    b.ToTable("AccountOutfitLikes");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.OutfitItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId", "OutfitId");

                    b.HasIndex("OutfitId");

                    b.ToTable("OutfitItems");
                });

            modelBuilder.Entity("HypeHubDAL.Models.AccountCredentials", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithOne("Credentials")
                        .HasForeignKey("HypeHubDAL.Models.AccountCredentials", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithMany("Items")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.ItemImage", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", "Item")
                        .WithMany("Images")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Account", "Account")
                        .WithMany("Outfits")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HypeHubDAL.Models.OutfitImage", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Outfit", "Outfit")
                        .WithMany("Images")
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountItemLike", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", "Item")
                        .WithMany("Likes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.AccountOutfitLike", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Outfit", "Outfit")
                        .WithMany("Likes")
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Relations.OutfitItem", b =>
                {
                    b.HasOne("HypeHubDAL.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HypeHubDAL.Models.Outfit", null)
                        .WithMany()
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HypeHubDAL.Models.Account", b =>
                {
                    b.Navigation("Credentials")
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Item", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("HypeHubDAL.Models.Outfit", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
